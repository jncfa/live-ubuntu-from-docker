name: Build and push image template
on:
  workflow_call:
    inputs:
      base-label:
        required: true
        type: string
      image-variant:
        required: false
        type: string
        default: ""
      tag:
        required: false
        type: string
        default: latest
      dockerfile:
        required: true
        type: string
      should-push:
        required: false
        type: boolean
        default: false
      runner:
        required: false
        type: string
        default: ubuntu-latest
      force-build:
        required: false
        type: boolean
        default: false
      platforms:
        required: false
        type: string
        default: linux/amd64,linux/arm64
      build-contexts:
        required: false
        type: string
        default: ""
jobs:
  docker:
    runs-on: ${{ inputs.runner }}
    env:
      # add "-{{ inputs.image-variant }}" to the end of the image name if image-variant is set
      image-name: ghcr.io/${{ github.repository_owner }}/${{ inputs.base-label }}${{ inputs.image-variant != '' && format('-{0}', inputs.image-variant) || '' }}:${{ inputs.tag }}
      # cache only for same the branch
      image-cacher-name: ghcr.io/${{ github.repository_owner }}/${{ inputs.base-label }}:${{ inputs.tag }}-buildcache-for-${{ github.ref_name }}
      image-cacher-common-name: ghcr.io/${{ github.repository_owner }}/${{ inputs.base-label }}:${{ inputs.tag }}-buildcache-for-${{ github.event.repository.default_branch }}
      
    steps:
      - run: df -h
      - name: "node-cleanup"
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
          sudo docker builder prune -a
      - run: df -h
      - uses: actions/checkout@v4
      - name: Set current date
        id: date
        run: |
          echo "date=$(date +%Y-%m-%d)" >> "$GITHUB_OUTPUT"
      - name: Echo vars for debugging
        run: |
          echo "Current date is ${{ steps.date.outputs.date }}"
          echo "image_name is ${{ env.image-name }}"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push cache
        uses: docker/build-push-action@v6
        with:
          push: ${{ inputs.should-push }}
          file: ${{ inputs.dockerfile }}
          platforms: ${{ inputs.platforms }}
          tags: |
            ${{ env.image-name }}
            ${{ env.image-name }}-${{ steps.date.outputs.date }}
          build-contexts: ${{ inputs.build-contexts }}
          outputs: type=tar,dest=/tmp/${{ inputs.base-label }}-result.tar
          cache-from: |
            type=registry,ref=${{ env.image-cacher-name }}
            type=registry,ref=${{ env.image-cacher-common-name }}
          cache-to: |
            type=registry,ref=${{ env.image-cacher-name }},mode=max
      - name: Compress and split tar archive
        run: |
          gzip -9 /tmp/buildx-output.tar
          cd /tmp
          split -b 1500m ${{ inputs.base-label }}-result.tar.gz ${{ inputs.base-label }}-result.tar.gz.part-
      - name: Release
        uses: softprops/action-gh-release@v2.2.1
        if: github.ref_type == 'tag'
        with:
          name: "${{ github.ref_name }} â€” ${{ steps.date.outputs.date }}"
          files: "/tmp/${{ inputs.base-label }}-result.tar.gz.part-*"